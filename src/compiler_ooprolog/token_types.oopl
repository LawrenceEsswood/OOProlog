class class_header_token.
	Name.
	Parents.
	class_header_token(Name, Parents).
endclass.

class class_token.
	Hdr.
	Bdy.
	class_token(Hdr, Bdy).
endclass.

class clause_token.
	Left.
	Name.
	N.
	Mods.
	split_fnc :- functor(Left, Name, N).
endclass.

% Until I implement super calls 

class rule_token extends clause_token.
	Right.
	rule_token(Left, Right) :- split_fnc, Mods = [].
	rule_token(Left, Right, Mods) :- split_fnc.
	add_mods(Mds, Tkn) :- append(Mds, Mods, NewMods), new(rule_token, Tkn, Left, Right, NewMods).
endclass.

class fact_token extends clause_token.
	fact_token(Left) :- split_fnc, Mods = [].
	fact_token(Left, Mods) :- split_fnc.
	add_mods(Mds, Tkn) :- append(Mds, Mods, NewMods), new(fact_token, Tkn, Left, NewMods).
endclass.